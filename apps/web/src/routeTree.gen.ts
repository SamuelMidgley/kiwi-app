/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as GamesIndexRouteImport } from './routes/games/index'
import { Route as AppsIndexRouteImport } from './routes/apps/index'
import { Route as GamesSolitaireRouteImport } from './routes/games/solitaire'
import { Route as AppsWeightTrackerRouteImport } from './routes/apps/weight-tracker'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const GamesIndexRoute = GamesIndexRouteImport.update({
  id: '/games/',
  path: '/games/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppsIndexRoute = AppsIndexRouteImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => rootRouteImport,
} as any)
const GamesSolitaireRoute = GamesSolitaireRouteImport.update({
  id: '/games/solitaire',
  path: '/games/solitaire',
  getParentRoute: () => rootRouteImport,
} as any)
const AppsWeightTrackerRoute = AppsWeightTrackerRouteImport.update({
  id: '/apps/weight-tracker',
  path: '/apps/weight-tracker',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/apps/weight-tracker': typeof AppsWeightTrackerRoute
  '/games/solitaire': typeof GamesSolitaireRoute
  '/apps': typeof AppsIndexRoute
  '/games': typeof GamesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/apps/weight-tracker': typeof AppsWeightTrackerRoute
  '/games/solitaire': typeof GamesSolitaireRoute
  '/apps': typeof AppsIndexRoute
  '/games': typeof GamesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/apps/weight-tracker': typeof AppsWeightTrackerRoute
  '/games/solitaire': typeof GamesSolitaireRoute
  '/apps/': typeof AppsIndexRoute
  '/games/': typeof GamesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/apps/weight-tracker'
    | '/games/solitaire'
    | '/apps'
    | '/games'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/apps/weight-tracker' | '/games/solitaire' | '/apps' | '/games'
  id:
    | '__root__'
    | '/'
    | '/apps/weight-tracker'
    | '/games/solitaire'
    | '/apps/'
    | '/games/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppsWeightTrackerRoute: typeof AppsWeightTrackerRoute
  GamesSolitaireRoute: typeof GamesSolitaireRoute
  AppsIndexRoute: typeof AppsIndexRoute
  GamesIndexRoute: typeof GamesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games/': {
      id: '/games/'
      path: '/games'
      fullPath: '/games'
      preLoaderRoute: typeof GamesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/apps/': {
      id: '/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AppsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games/solitaire': {
      id: '/games/solitaire'
      path: '/games/solitaire'
      fullPath: '/games/solitaire'
      preLoaderRoute: typeof GamesSolitaireRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/apps/weight-tracker': {
      id: '/apps/weight-tracker'
      path: '/apps/weight-tracker'
      fullPath: '/apps/weight-tracker'
      preLoaderRoute: typeof AppsWeightTrackerRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppsWeightTrackerRoute: AppsWeightTrackerRoute,
  GamesSolitaireRoute: GamesSolitaireRoute,
  AppsIndexRoute: AppsIndexRoute,
  GamesIndexRoute: GamesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
