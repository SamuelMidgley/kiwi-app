/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as GamesSolitaireRouteImport } from './routes/games/solitaire'
import { Route as AuthenticatedWeightTrackerRouteImport } from './routes/_authenticated/weight-tracker'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/_authenticated/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const GamesSolitaireRoute = GamesSolitaireRouteImport.update({
  id: '/games/solitaire',
  path: '/games/solitaire',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedWeightTrackerRoute =
  AuthenticatedWeightTrackerRouteImport.update({
    id: '/_authenticated/weight-tracker',
    path: '/weight-tracker',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/weight-tracker': typeof AuthenticatedWeightTrackerRoute
  '/games/solitaire': typeof GamesSolitaireRoute
  '/': typeof AuthenticatedIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/weight-tracker': typeof AuthenticatedWeightTrackerRoute
  '/games/solitaire': typeof GamesSolitaireRoute
  '/': typeof AuthenticatedIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/login': typeof LoginRoute
  '/_authenticated/weight-tracker': typeof AuthenticatedWeightTrackerRoute
  '/games/solitaire': typeof GamesSolitaireRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/login' | '/weight-tracker' | '/games/solitaire' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/weight-tracker' | '/games/solitaire' | '/'
  id:
    | '__root__'
    | '/login'
    | '/_authenticated/weight-tracker'
    | '/games/solitaire'
    | '/_authenticated/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LoginRoute: typeof LoginRoute
  AuthenticatedWeightTrackerRoute: typeof AuthenticatedWeightTrackerRoute
  GamesSolitaireRoute: typeof GamesSolitaireRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games/solitaire': {
      id: '/games/solitaire'
      path: '/games/solitaire'
      fullPath: '/games/solitaire'
      preLoaderRoute: typeof GamesSolitaireRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/weight-tracker': {
      id: '/_authenticated/weight-tracker'
      path: '/weight-tracker'
      fullPath: '/weight-tracker'
      preLoaderRoute: typeof AuthenticatedWeightTrackerRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  LoginRoute: LoginRoute,
  AuthenticatedWeightTrackerRoute: AuthenticatedWeightTrackerRoute,
  GamesSolitaireRoute: GamesSolitaireRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
